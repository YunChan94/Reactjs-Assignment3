{"version":3,"file":"static/js/326.dfd418a0.chunk.js","mappings":"iOACA,EAA4B,6BAA5B,EAA2E,mCAA3E,EAA4H,+B,SCgF5H,EA3EkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,UACjB,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,GAAWC,EAAAA,EAAAA,MAgDjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,qCACA,kBAAMD,UAAWC,EAAqBC,SAjDtB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAaZ,EAASa,QAAQC,MAIpC,GAAmB,KAAfF,GAAuC,KAAlBT,EAAzB,CAMA,IAGMY,IAHUC,EAAAA,EAAAA,IAAe,YAAaA,EAAAA,EAAAA,IAAe,WAAa,IAG9CC,MACxB,SAACC,GAAD,OAAUA,EAAKC,QAAUP,GAAcM,EAAKE,WAAajB,CAAzD,IAIGY,GAOHM,MAAM,2BAGNhB,EAASiB,EAAAA,EAAAA,UAGTC,EAAAA,EAAAA,IAAc,cAAeR,GAG7BjB,EAAS,OAfTuB,MAAM,8DAGNjB,EAAiB,IAflB,MAFCiB,MAAM,qCA+BT,EAUK,WACE,kBAAOG,KAAK,QAAQC,YAAY,QAAQC,IAAK1B,KAC7C,kBACEwB,KAAK,WACLC,YAAY,WACZX,MAAOX,EACPwB,SAdoB,SAACjB,GAC7BN,EAAiBM,EAAMkB,OAAOd,MAC/B,KAcO,4CAEF,gDACqB,SAAC,KAAD,CAAMe,GAAG,YAAT,0BAK5B,C","sources":["webpack://rjs-asm03/./src/pages/Login/LoginPage.module.css?1793","pages/Login/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__jujFo\",\"signInContainer\":\"LoginPage_signInContainer__Fgjir\",\"formcontrol\":\"LoginPage_formcontrol__uwprO\"};","import React, { useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getFromStorage, saveToStorage } from \"../../lib/storage\";\r\nimport { loginActions } from \"../../store/login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classes from \"./LoginPage.module.css\";\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const emailRef = useRef();\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  // const isLogin = useSelector((state) => state.login.isLogin);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // Lấy giá trị từ input\r\n    const emailInput = emailRef.current.value;\r\n\r\n    // Validate input\r\n    // Khi user nhập không đủ dữ liệu\r\n    if (emailInput === \"\" || passwordInput === \"\") {\r\n      alert(\"All information need to be filled!\");\r\n      return;\r\n    }\r\n\r\n    // Lấy dữ liêu từ localstorage\r\n    const userArr = getFromStorage(\"userArr\") ? getFromStorage(\"userArr\") : [];\r\n\r\n    // Tìm user trong mảng userArr xem đã có đăng ký chưa\r\n    const foundUser = userArr.find(\r\n      (user) => user.email === emailInput && user.password === passwordInput\r\n    );\r\n\r\n    // Thông báo cho người dùng khi không tìm thấy thông tin user\r\n    if (!foundUser) {\r\n      alert(`Can not find user's information! Please create an account.`);\r\n\r\n      // reset lại form input password\r\n      setPasswordInput(\"\");\r\n    } else {\r\n      // Thông báo đăng nhập thành công\r\n      alert(\"Logged in successfully!\");\r\n\r\n      // Cập nhật thông tin đăng nhập vào redux\r\n      dispatch(loginActions.login());\r\n\r\n      // Cập nhật thông tin người dùng hiện tại vào localStorage\r\n      saveToStorage(\"currentUser\", foundUser);\r\n\r\n      // Chuyển đến trang chủ\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    setPasswordInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.signInContainer}>\r\n        <h1>Sign In</h1>\r\n        <form className={classes.formcontrol} onSubmit={submitHandler}>\r\n          <input type=\"email\" placeholder=\"Email\" ref={emailRef} />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={passwordInput}\r\n            onChange={passwordChangeHandler}\r\n          />\r\n          <button>SIGN IN</button>\r\n        </form>\r\n        <p>\r\n          Create an account? <Link to=\"/register\">Click</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginPage;\r\n"],"names":["navigate","useNavigate","emailRef","useRef","useState","passwordInput","setPasswordInput","dispatch","useDispatch","className","classes","onSubmit","event","preventDefault","emailInput","current","value","foundUser","getFromStorage","find","user","email","password","alert","loginActions","saveToStorage","type","placeholder","ref","onChange","target","to"],"sourceRoot":""}